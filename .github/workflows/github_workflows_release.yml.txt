# This GitHub Action workflow is triggered when a new Release is created in GitHub.
# It builds the Java application using Gradle and uploads the resulting executable
# JAR file as an asset to the release.

name: Java CI - Build and Upload Release Asset

on:
  release:
    types: [created]

jobs:
  build_and_upload:
    name: Build and Upload Release JAR
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to write release assets

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin' # Eclipse Temurin is a popular, open-source distribution

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build
        # This command runs the 'build' task, which should compile the code,
        # run tests, and create the JAR file in the build/libs directory.

      - name: Get the project version
        id: get_version
        run: echo "VERSION=$(./gradlew properties -q | grep '^version:' | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Get the project name
        id: get_name
        run: echo "NAME=$(./gradlew properties -q | grep '^name:' | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/libs/${{ steps.get_name.outputs.NAME }}-${{ steps.get_version.outputs.VERSION }}.jar
          asset_name: ${{ steps.get_name.outputs.NAME }}-${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive
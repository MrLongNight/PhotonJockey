name: Unit Tests

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Clone Maven Dependency
        uses: actions/checkout@v4
        with:
          repository: Kakifrucht/yetanotherhueapi
          path: yetanotherhueapi_repo

      - name: Install Maven Dependency
        working-directory: yetanotherhueapi_repo
        run: |
          echo "Building and installing dependency to Maven Local..."
          mvn install -DskipTests
          echo "Dependency installed successfully."

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run tests with Gradle
        run: ./gradlew test --continue
      
      - name: Generate Test Summary
        if: always()
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          if [ -d "build/test-results/test" ]; then
            TOTAL=$(find build/test-results/test -name "*.xml" -exec grep -oh "<testcase" {} \; | wc -l)
            PASSED=$(find build/test-results/test -name "*.xml" -exec grep -oh '<testcase.*time="[0-9.]*"[^>]*>' {} \; | grep -v "failure\|error" | wc -l)
            FAILED=$(find build/test-results/test -name "*.xml" -exec grep -oh "<failure" {} \; | wc -l)
            ERRORS=$(find build/test-results/test -name "*.xml" -exec grep -oh "<error" {} \; | wc -l)
            
            echo "- **Total Tests:** $TOTAL" >> $GITHUB_STEP_SUMMARY
            echo "- **Passed:** ✅ $PASSED" >> $GITHUB_STEP_SUMMARY
            echo "- **Failed:** ❌ $FAILED" >> $GITHUB_STEP_SUMMARY
            echo "- **Errors:** ⚠️ $ERRORS" >> $GITHUB_STEP_SUMMARY
            
            if [ $FAILED -gt 0 ] || [ $ERRORS -gt 0 ]; then
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "### Failed Tests" >> $GITHUB_STEP_SUMMARY
              find build/test-results/test -name "*.xml" -exec grep -l "failure\|error" {} \; | while read file; do
                classname=$(grep -oh 'classname="[^"]*"' "$file" | head -1 | cut -d'"' -f2)
                testname=$(grep -oh 'name="[^"]*"' "$file" | head -1 | cut -d'"' -f2)
                echo "- \`$classname.$testname\`" >> $GITHUB_STEP_SUMMARY
              done
            fi
          else
            echo "⚠️ No test results found" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/
          retention-days: 30

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: build/reports/tests/
          retention-days: 30
